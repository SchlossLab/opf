slidify(index.Rmd)
library(slidify)
slidify(index.Rmd)
pwd()
wd()
getwc()
setwd("~/opf/doc")
slidify(index.Rmd)
slidify("index.Rmd")
setwd("~/opf/data")
mat <- data.matrix( read.table(file="twin.eggnog.thetayc.1.lt.ave.dist", fill=TRUE, col.names=paste("V", 1:6))  )
mat
mat[upper.tri(mat)] <- t(mat)[upper.tri(mat)]
mat
mat <- data.matrix( read.table(file="twin.eggnog.thetayc.1.lt.ave.dist", fill=TRUE  )
)
mat <- data.matrix( read.table(file="twin.eggnog.thetayc.1.lt.ave.dist", fill=TRUE))
mat[upper.tri(mat)] <- t(mat)[upper.tri(mat)]
mat
?read.table
mat <- data.matrix( read.table(file="twin.eggnog.thetayc.1.lt.ave.dist", fill=TRUE, header=T, ))
setwd("~/opf/data/references/")
?read.table
setwd("~/opf/data/references/")
mat <- data.matrix( read.table(file="twin.eggnog.thetayc.1.lt.ave.dist", fill=TRUE, header=F, skip=1, row.names=1 ))
mat
mat[upper.tri(mat)] <- t(mat)[upper.tri(mat)]
mat
plot(mat)
mat <- data.matrix( read.table(file="preg.eggnog.thetayc.1.lt.dist", fill=TRUE, header=F, skip=1, row.names=1 ))
mat[upper.tri(mat)] <- t(mat)[upper.tri(mat)]
mat
mat <- data.matrix( read.table(file="preg.eggnog.thetayc.1.lt.dist", fill=TRUE, header=F, skip=2, row.names=1 ))
mat[upper.tri(mat)] <- t(mat)[upper.tri(mat)]
mat
mat <- data.matrix( read.table(file="preg.eggnog.thetayc.1.lt.dist", fill=TRUE, header=F, skip=1, row.names=1 ))
mat
mat <- data.matrix( read.table(file="preg.eggnog.thetayc.1.lt.dist", fill=TRUE, header=F, skip=1, row.names=1 ))
mat <- data.matrix( read.table(file="preg.eggnog.thetayc.1.lt.dist", fill=TRUE, header=F, skip=1, row.names=0 ))
mat <- data.matrix( read.table(file="preg.eggnog.thetayc.1.lt.dist", fill=TRUE, header=F, skip=1, row.names=1 ))
mat <- data.matrix( read.table(file="preg.eggnog.thetayc.1.lt.dist", fill=TRUE, header=F, skip=1, row.names=NULL ))
mat
mat <- data.matrix( read.table(file="preg.eggnog.thetayc.1.lt.dist", fill=TRUE, header=F, skip=1, row.names=1 ))
mat
mat$V2
mat <- data.matrix( read.table(file="preg.eggnog.thetayc.1.lt.dist", fill=TRUE, header=F, skip=1, row.names=1, col.names=paste("V", 1:) ))
mat <- data.matrix( read.table(file="preg.eggnog.thetayc.1.lt.dist", fill=TRUE, header=F, skip=1, row.names=1, col.names=paste("V", 1:20 ))
)
mat <- data.matrix( read.table(file="preg.eggnog.thetayc.1.lt.dist", fill=TRUE, header=F, skip=1, row.names=1, col.names=paste("V", 1:20 )))
mat
?countlines
?countLines
?nlines
?nlines()
?readline
ncol<-readLines("preg.eggnog.thetayc.1.lt.dist", n=1)
ncol
mat <- data.matrix( read.table(file="preg.eggnog.thetayc.1.lt.dist", fill=TRUE, header=F, skip=1, row.names=1, col.names=paste("V", 1:readLines("preg.eggnog.thetayc.1.lt.dist", n=1) )))
mat
col.names(mat)<-row.names(mat)
colnames(mat)<-rownames(mat)
ncol(mat)
colnames(mat)<-c("1", rownames(mat))
rownames(mat)
nrows(mat)
nrow(mat)
ncol(mat)
mat <- data.matrix( read.table(file="preg.eggnog.thetayc.1.lt.dist", fill=TRUE, header=F, skip=1, row.names=1, col.names=paste("V", 1:readLines("preg.eggnog.thetayc.1.lt.dist", n=1)+1 )))
mat
mat <- data.matrix( read.table(file="preg.eggnog.thetayc.1.lt.dist", fill=TRUE, header=F, skip=1, row.names=1, col.names=paste("V", 1:readLines("preg.eggnog.thetayc.1.lt.dist", n=1)-1 )))
mat
mat <- data.matrix( read.table(file="preg.eggnog_nona.thetayc.1.lt.dist", fill=TRUE, header=F, skip=1, row.names=1, col.names=paste("V", 1:readLines("preg.eggnog.thetayc.1.lt.dist", n=1) )))
mat
?data.matrix
d<-read.table(file="preg.eggnog_nona.thetayc.1.lt.dist", fill=TRUE, header=F, skip=1, row.names=1, col.names=paste("V", 1:readLines("preg.eggnog.thetayc.1.lt.dist", n=1) ))
d
?read.table
d$V.21<-NA
d
mat<-data.matrix(d)
mat
mat[!upper.tri(mat)] <- 0
result <- mat + t(mat)
result
d
mat<-data.matrix(d)
mat
mat[upper.tri(mat)] <- 0
mat
result <- mat + t(mat)
result
nrow(mat)
ncol(mat)
colnames(mat)<-rownames(mat)
mat
colnames(result)<-rownames(result)
result
mat <- data.matrix( read.table(file="preg.eggnog_nona.thetayc.1.lt.dist", fill=TRUE, header=F, skip=1, row.names=1, col.names=paste("V", 1:readLines("preg.eggnog.thetayc.1.lt.dist", n=1) )))
mat[upper.tri(mat)] <- 0
result <- mat + t(mat)
colnames(mat)<-rownames(mat)
mat <- data.matrix( read.table(file="preg.eggnog_nona.thetayc.1.lt.dist", fill=TRUE, header=F, skip=1, row.names=1, col.names=paste("V", 1:readLines("preg.eggnog.thetayc.1.lt.dist", n=1) )))
mat[upper.tri(mat)] <- 0
mat <- mat + t(mat)
colnames(mat)<-rownames(mat)
mat <- data.matrix( read.table(file="preg.eggnog_nona.thetayc.1.lt.dist", fill=TRUE, header=F, skip=1, row.names=1, col.names=paste("V", 1:readLines("preg.eggnog.thetayc.1.lt.dist", n=1) )))
mat$V.21<-NA
mat[upper.tri(mat)] <- 0
mat <- mat + t(mat)
colnames(mat)<-rownames(mat)
mat
d <- read.table(file="preg.eggnog_nona.thetayc.1.lt.dist", fill=TRUE, header=F, skip=1, row.names=1, col.names=paste("V", 1:readLines("preg.eggnog.thetayc.1.lt.dist", n=1) ))
d$V.21<-NA
mat<-data.matrix(d)
mat[upper.tri(mat)] <- 0
mat <- mat + t(mat)
colnames(mat)<-rownames(mat)
mat
matrixcols <- readLines("preg.eggnog.thetayc.1.lt.dist", n=1)
d <- read.table(file="preg.eggnog_nona.thetayc.1.lt.dist", fill=TRUE, header=F, skip=1, row.names=1, col.names=paste("V", 1:matrixcols))
d$paste("v.", matrixcols)<-NA
mat<-data.matrix(d)
mat[upper.tri(mat)] <- 0
mat <- mat + t(mat)
colnames(mat)<-rownames(mat)
matrixcols <- readLines("preg.eggnog.thetayc.1.lt.dist", n=1)
d <- read.table(file="preg.eggnog_nona.thetayc.1.lt.dist", fill=TRUE, header=F, skip=1, row.names=1, col.names=paste("V", 1:matrixcols))
paste("v.", matrixcols)
?paste
matrixcols <- readLines("preg.eggnog.thetayc.1.lt.dist", n=1)
d <- read.table(file="preg.eggnog_nona.thetayc.1.lt.dist", fill=TRUE, header=F, skip=1, row.names=1, col.names=paste("V", 1:matrixcols))
d$paste("v.", matrixcols, sep="")<-NA
mat<-data.matrix(d)
mat[upper.tri(mat)] <- 0
mat <- mat + t(mat)
colnames(mat)<-rownames(mat)
paste("v.", matrixcols, sep="")
matrixcols <- readLines("preg.eggnog.thetayc.1.lt.dist", n=1)
d <- read.table(file="preg.eggnog_nona.thetayc.1.lt.dist", fill=TRUE, header=F, skip=1, row.names=1, col.names=paste("V", 1:matrixcols))
d$paste("V.", matrixcols, sep="")<-NA
mat<-data.matrix(d)
mat[upper.tri(mat)] <- 0
mat <- mat + t(mat)
colnames(mat)<-rownames(mat)
matrixcols <- readLines("preg.eggnog.thetayc.1.lt.dist", n=1)
d <- read.table(file="preg.eggnog_nona.thetayc.1.lt.dist", fill=TRUE, header=F, skip=1, row.names=1, col.names=paste("V", 1:matrixcols))
d
paste("V.", matrixcols+1, sep="")
?type
typeof(matrixcols)
?int
matrixcols <- readLines("preg.eggnog.thetayc.1.lt.dist", n=1)
d <- read.table(file="preg.eggnog_nona.thetayc.1.lt.dist", fill=TRUE, header=F, skip=1, row.names=1, col.names=paste("V", 1:matrixcols))
d$x<-NA
mat<-data.matrix(d)
mat[upper.tri(mat)] <- 0
mat <- mat + t(mat)
colnames(mat)<-rownames(mat)
mat
mat[1,1]
mat[is.na(mat)]<-0
mat
matrixcols <- readLines("preg.eggnog.thetayc.1.lt.dist", n=1)
d <- read.table(file="preg.eggnog_nona.thetayc.1.lt.dist", fill=TRUE, header=F, skip=1, row.names=1, col.names=paste("V", 1:matrixcols))
d$x<-NA
mat<-data.matrix(d)
mat
mat[is.na(mat)]<-0
mat
mat <- mat + t(mat)
colnames(mat)<-rownames(mat)
mat
?read.table
d <- read.table(file="preg.eggnog_nona.thetayc.1.lt.dist", fill=TRUE, header=F, skip=1, row.names=1, col.names=paste("V", 1:matrixcols), sep ='\t')
d
d <- read.delim(file="preg.eggnog_nona.thetayc.1.lt.dist", fill=TRUE, header=F, skip=1, row.names=1, col.names=paste("V", 1:matrixcols), sep ='\t')
d
ncol(d)
?read.delim
d <- read.delim(file="preg.eggnog_nona.thetayc.1.lt.dist", fill=TRUE, header=F, skip=1, row.names=1, col.names=paste("V", 1:matrixcols), sep ='\t', strip.white=F)
d
d <- read.delim(file="preg.eggnog_nona.thetayc.1.lt.dist", fill=TRUE, header=F, skip=1, row.names=1, col.names=paste("V", 1:matrixcols), sep ='\t', strip.white=F, blank.lines.skip=F)
d <- read.delim(file="preg.eggnog_nona.thetayc.1.lt.dist", fill=TRUE, header=F, skip=1, row.names=1, col.names=paste("V", 1:matrixcols), sep ='\t', strip.white=F)
d
d <- read.delim(file="preg.eggnog_nona.thetayc.1.lt.dist", fill=TRUE, header=F, skip=1, row.names=1, col.names=paste("V", 1:matrixcols), sep ='\t', strip.white=T)
d
d <- read.delim(file="preg.eggnog_nona.thetayc.1.lt.dist", fill=TRUE, header=F, skip=1, row.names=1, col.names=paste("V", 1:matrixcols), sep ='\t', strip.white=F)
d <- read.delim(file="preg.eggnog_nona.thetayc.1.lt.dist", fill=TRUE, header=F, skip=1, row.names=1, col.names=paste("V", 1:matrixcols), sep ="\t", strip.white=F)
d
d <- read.delim(file="preg.eggnog_nona.thetayc.1.lt.dist", fill=TRUE, header=F, skip=1, row.names=1, col.names=paste("V", 1:matrixcols), sep ="\t", strip.white=F, na.strings = 0)
d
d <- read.delim(file="preg.eggnog_nona.thetayc.1.lt.dist", fill=TRUE, header=F, skip=1, row.names=1, col.names=paste("V", 1:matrixcols), sep ="\t", strip.white=F, flus=T)
d <- read.delim(file="preg.eggnog_nona.thetayc.1.lt.dist", fill=TRUE, header=F, skip=1, row.names=1, col.names=paste("V", 1:matrixcols), sep ="\t", strip.white=F, flush=T)
d
d <- read.delim(file="preg.eggnog_nona.thetayc.1.lt.dist", fill=TRUE, header=F, skip=1, row.names=1, col.names=paste("V", 1:matrixcols), sep ="\t", strip.white=F, flasdfas=T)
d <- read.delim(file="preg.eggnog_nona.thetayc.1.lt.dist", fill=TRUE, header=F, skip=1, row.names=1, col.names=paste("V", 1:matrixcols), sep ="\t", strip.white=F, flush=T)
d
d <- read.delim(file="preg.eggnog_nona.thetayc.1.lt.dist", fill=TRUE, header=F, skip=1, row.names=1, col.names=paste("V", 1:matrixcols), sep =",", strip.white=F)
d
d <- read.table(file="preg.eggnog_nona.thetayc.1.lt.dist", fill=TRUE, header=F, skip=1, row.names=1, col.names=paste("V", 1:matrixcols), sep ="\t", strip.white=F)
d
matrixcols <- readLines("preg.eggnog.thetayc.1.lt.dist", n=1)
d <- read.table(file="preg.eggnog_nona.thetayc.1.lt.dist", fill=TRUE, header=F, skip=1, row.names=1, col.names=paste("V", 1:matrixcols))
d$x<-NA
mat<-data.matrix(d)
mat[is.na(mat)]<-0
mat <- mat + t(mat)
colnames(mat)<-rownames(mat)
mat
plot(mat)
d <- scan(""preg.eggnog_nona.thetayc.1.lt.dist", what="")
d <- scan("preg.eggnog_nona.thetayc.1.lt.dist", what="")
d
read.lt <- function(d){
n <- as.numeric(d[1]); d <- d[-1]
m <- matrix(rep(NA, n*n), nrow=n)
groups <- d[1]; d <- d[-1]
for(i in 2:n){
groups <- c(groups, d[1]); d <- d[-1]
m[i,1:(i-1)] <- as.numeric(d[1:(i-1)])
d <- d[-c(1:(i-1))]
}
rownames(m) <- groups
colnames(m) <- groups
return(m)
}
kegg.lt <- read.lt(d)
kegg.lt
setwd(~/opf/data/figures)
setwd("~/opf/data/figures")
library(RSvgDevice)
library(ggplot2)
library(gplots)
library(reshape)
t.dists <- read.csv(file='/Users/kiverson/Dropbox/OPF/figure_data_scripts/distance_comparison.csv', sep=',', header=T)
dfc <- summarySE(t.dists, measurevar="dist_bars", groupvars=c("type","method"))
summarySE <- function(data=NULL, measurevar, groupvars=NULL, na.rm=FALSE,
conf.interval=.95, .drop=TRUE) {
require(plyr)
# New version of length which can handle NA's: if na.rm==T, don't count them
length2 <- function (x, na.rm=FALSE) {
if (na.rm) sum(!is.na(x))
else       length(x)
}
# This is does the summary; it's not easy to understand...
datac <- ddply(data, groupvars, .drop=.drop,
.fun= function(xx, col, na.rm) {
c( N    = length2(xx[,col], na.rm=na.rm),
mean = mean   (xx[,col], na.rm=na.rm),
sd   = sd     (xx[,col], na.rm=na.rm)
)
},
measurevar,
na.rm
)
# Rename the "mean" column
datac <- rename(datac, c("mean"=measurevar))
datac$se <- datac$sd / sqrt(datac$N)  # Calculate standard error of the mean
# Confidence interval multiplier for standard error
# Calculate t-statistic for confidence interval:
# e.g., if conf.interval is .95, use .975 (above/below), and use df=N-1
ciMult <- qt(conf.interval/2 + .5, datac$N-1)
datac$ci <- datac$se * ciMult
return(datac)
}
dfc <- summarySE(t.dists, measurevar="dist_bars", groupvars=c("type","method"))
devSVG(file='../figures/Fig1.svg')
ggplot(dfc, aes(x=method, y=dist_bars, group=type, fill=type)) +
geom_errorbar(aes(ymin=dist_bars-se, ymax=dist_bars+se), width=.1, position=position_dodge(.9)) +
geom_bar(position=position_dodge(), stat='identity', colour='black') + theme_bw() + ylab('Distance') + xlab(' ') + scale_x_discrete(limits=c("unifrac", "unifrac_uw", "16s","opf", "kegg"), labels=c('Weighted Unifrac', 'Unweighted Unifrac', '16S', 'OPF', 'KEGG')) + theme(legend.justification=c(0,1), legend.position=c(0,1)) + scale_fill_manual(values=c("#000000", '#666666', "white"),
name="Comparison",
breaks=c("all", "family", "twins"),
labels=c("Unrelated", "Inside family", "Twin to twin"))
dev.off()
ggplot(dfc, aes(x=method, y=dist_bars, group=type, fill=type)) +
geom_errorbar(aes(ymin=dist_bars-se, ymax=dist_bars+se), width=.1, position=position_dodge(.9)) +
geom_bar(position=position_dodge(), stat='identity', colour='black') + theme_bw() + ylab('Distance') + xlab(' ') + scale_x_discrete(limits=c("unifrac", "unifrac_uw", "16s","opf", "kegg"), labels=c('Weighted Unifrac', 'Unweighted Unifrac', '16S', 'OPF', 'KEGG')) + theme(legend.justification=c(0,1), legend.position=c(0,1)) + scale_fill_manual(values=c("#000000", '#666666', "white"),
name="Comparison",
breaks=c("all", "family", "twins"),
labels=c("Unrelated", "Inside family", "Twin to twin"))
t.bin <- read.table(file='../references/twin_opf_bin.csv', sep=' ', header=T, row.names=1)
rsum <- rowSums(t.bin)
t.bin['sum'] <- NA
t.bin$sum <- rsum
twin.o.sums <- matrix(nrow=18, ncol=1)
t.bin <- read.table(file='../references/twin_opf_bin.csv', sep=' ', header=T, row.names=1)
rsum <- rowSums(t.bin)
t.bin['sum'] <- NA
t.bin$sum <- rsum
twin.o.sums <- matrix(nrow=18, ncol=1)
for (i in 1:18){
s <- sum(t.bin$sum==i)
twin.o.sums[i,1] <- s
}
tk.bin <- read.table(file='../references/twin_kegg_bin.csv', sep=' ', header=T, row.names=1)
rksum <- rowSums(tk.bin)
tk.bin['sum'] <- NA
tk.bin$sum <- rksum
twin.k.sums <- matrix(nrow=18, ncol=1)
for (i in 1:18){
s <- sum(tk.bin$sum==i)
twin.k.sums[i,1] <- s
}
ts.bin <- read.table(file='../references/twin_16s_bin.csv', sep=' ', header=T, row.names=1)
rssum <- rowSums(ts.bin)
ts.bin['sum'] <- NA
ts.bin$sum <- rssum
twin.s.sums <- matrix(nrow=18, ncol=1)
for (i in 1:18){
s <- sum(ts.bin$sum==i)
twin.s.sums[i,1] <- s
}
plot(twin.o.sums, log='y', ylim=c(0.6, 6000), xlab='# of samples', ylab='Shared OPFs/OTUs/KEGG Categories', pch=15, cex=4)
points(twin.s.sums, pch=16, cex=4)
points(twin.k.sums, pch=17, cex=4)
legend(1, 100, c('OPF', 'OTU', 'KEGG'), pch=c(15, 16, 17), , cex=4)
preg.pcoa <- read.csv(file='pregnancy_pcoa_vars.csv', sep=',', header=T)
preg.pcoa <- read.csv(file='../references/pregnancy_pcoa_vars.csv', sep=',', header=T)
ggplot(preg.pcoa, aes(axis1, axis2, shape=trimester)) + geom_point(size=5) + theme_bw()  + facet_wrap(~method, ncol=1, scales='free')
t.pcoa <- read.table(file='../references/twin_pcoa_opf_kegg_16s_vars.csv', sep=',', header=T)
preg.pcoa <- read.csv(file='../references/pregnancy_pcoa_vars.csv', sep=',', header=T)
ggplot(preg.pcoa, aes(axis1, axis2, shape=trimester)) + geom_point(size=5) + theme_bw()  + facet_wrap(~method, ncol=1, scales='free')
dv.off()
dev.off()
ggplot(preg.pcoa, aes(axis1, axis2, shape=trimester)) + geom_point(size=5) + theme_bw()  + facet_wrap(~method, ncol=1, scales='free')
